![[Lab10.1_linux.pdf]]

---

1. Типы файлов:
	1. `-` - обычный файл
	2. `d` - файл-директория
	3. `l` - файл-ссылка
	4. `b` - специальный блочный файл
	5. `p` - именованный пайп
	6. `c` - специальный символьный файл
	7. `s` - файл-сокет
	   <br>
2. Типы ссылок
   <br>
	1. **Символическая**
	   Похожи на ярлыки. Содержат адрес нужного файла в ФС. Когда пытаешься открыть такую ссылку, открывается целевой файл или папка. При удалении целевого файла ссылка останется, но будет указывать в никуда.
	   <br>
		1. Может ссылаться на файлы и каталоги
		2. После удаления, перемещения, переименования файла становится недействительной
		3. Права доступа и номер inode отличается от исходного файла
		4. При изменении прав доступа для исходного файла, права на ссылку останутся неизменными
		5. Можно ссылаться на другие разделы диска
		6. Содержат только имя файла, а не его содержимое
	   <br>
	1. **Жёсткая** 
	   Реализованы на более низком уровне файловой системы. Файл размещён только в определённом месте жёсткого диска. Но на это место могут ссылаться несколько ссылок из файловой системы. Каждая из ссылок - отдельный файл, но ведут они к одному участку диска. Файл можно перемещать между каталогами, все ссылки останутся рабочими.
	   <br>
		   1. Работают только в пределах одной ФС
		   2. Нельзя ссылаться на каталоги
		   3. Имеют ту же информацию inode и набор разрешений, что исходный файл
		   4. Разрешения на ссылку изменятся при изменении разрешений файла
		   5. Можно перемещать, переименовывать и даже удалять файл без вреда ссылке.
	  <br>
1. Утилиты
   <br>
	1. `file` - определяет тип файла 
	   <br>Помимо определения типа файла с точки зрения ФС, также может определять тип некоторых файлов исходя из содержимого и его бинарных заголовков, также выводит дополнительную информацию. 
	   <br>Примеры работы:
	   <br>
		   1. `/bin/sh` - символическая ссылка на `bash`<br>![[Pasted image 20230926212730.png]]
		      <br>
		   2. `/bin/bash` - исполняемый (ELF)-файл<br>![[Pasted image 20230926212752.png]]
		      <br>
		   3. `/dev/tty1` - символьное устройство<br>![[Pasted image 20230926212808.png]]
		      <br>
		   4. `~/Downloads/Lab07.pdf` - PDF-файл<br>![[Pasted image 20230926212856.png]]
		      <br>
		   5. `/dev/nvmeon1` - жёсткий диск, в начале которого находится MBR загрузочный сектор<br>![[Pasted image 20230926213110.png]]
	   <br>
	1. `ls` - список файлов в текущей/указанной директории
	   
	   По умолчанию не выводит скрытые файлы; Помимо названий, может указывать разрешения, владельца, размер и дату изменения; Может выводить размеры в человекочитаемом формате; Может сортировать и фильтровать файлы.
			<br>
	   1. Настройка вывода
		   1. `ls -1` - вывод по 1 на строку
			1. `ls -a` - вывод всех, включая скрытые
			2. `ls -F` - выводить / в конце имён директорий
			3. `ls -l` - выводить полную информацию
			4. `ls -h` - в применение совместно с `-a` начинает выводить размеры в человекочитаемом формате
			5. `ls -R` - вывод в том числе под-директорий рекурсивно
		   <br>
		1. Настройка сортировки
				1. `-r, --reverse` - сортировка в обратном порядке
				2. `-U --sort=none` - не сортировать
				3. `-S --sort=size` - сортировать по размеру
				4. `-t --sort=time` - сортировать по времени создания
				5. `-v --sort=version` - сортировать по версии
				6. `-X --sort=extension` - сортировать по разрешению
		   <br>
	1. `ln` - создание ссылок
	   <br>
		1. Создание символической ссылки
		   `ln -s /path/to/file /path/to/symlink`
		   <br>
		2. Создание жёсткой ссылки
		   `ln /path/to/file /path/to/hardlink`
		   <br>
		3.  Перезаписать символическую ссылку указателем на новый файл
		   `ln -sf /path/to/newfile /path/to/symlink`
		    <br>
	4. `mount` - монтирование устройства в директорию
	   <br>
		1. Показать все примонтированные ФС
		   `mount`
		   <br>
		2. Примонтировать устройство к директории
		   `mount -t fs_type path/to/device path/to/dir`
		   <br>
		3. Примонтировать устройство и создать директорию если необходимо
		   `mount --mkdir path/to/device path/to/dir`
		   <br>
		4. Примонтировать только для указанного пользователя
		   `mount -o uid=user_id,gid=group_id path/to/device path/to/dir`
		   <br>
		5. Примонтировать CD-ROM устройство (readonly)
		   `mount -t iso9660 -o ro /dev/cdrom /cdrom`
		   <br>
		6. Примонтировать все ФС из /etc/fstab
		   `mount -a`
		   <br>
		7. Примонтировать конкретную ФС из /etc/fstab
		   `mount /my_drive`
		   <br>
		8. Примонтировать одну директорию к другой
		   `mount --bind path/to/old_dir path/to/new_dir`
		   <br>
   1. `umount` - размонтировать устройство
      <br>
	   1. Размонтировать по устройству
		  `umount path/to/device`
		  <br>
	   2. Размонтировать по директории монтирования
		  `umount path/to/dir`
		  <br>
	   3. Размонтировать все ФС (кроме /proc)
		  `umount -a`
		      <br>
  1. Практические задания 
     <br>
	  1. Примеры различных типов файлов:
	     1. b - block special - /dev/nvme0n1
	     2. c - character special - /dev/tty1
	     3. l - link file - /bin
	     4. d - directory - /home
	     5. t - file - /tmp/test (after touch /tmp/test)
	        <br>      
	 2. Для чего изначально предназначена команда touch?<br>Для изменения времени доступа последнего изменения файла или доступа в текущее время.
	    <br>
	 3. Потренироваться с созданием ссылок<br>
		```bash
			 touch /tmp/test
			 ln /tmp/test /tmp/hard_test
			 ln -s /tmp/test /tmp/sym_test
			 mkdir /tmp/tdir
			 ln /tmp/tdir /tmp/hard_tdir
			 ln -s /tmp/tdir /tmp/sym_tdir
			 rm -rf /tmp/*test* /tmp/*tdir*
		```

		4. Каким образом можно определить, какие из файлов в одном и том же каталоге являются жесткими ссылками?
			1. `ls -i` и далее выбрать файлы с совпадающим inode
			2. Утилита `find` с аргументом `-samefile`
			3. `find . -inum inode_number` найти все файлы с искомым inode
			   <br>
		5. Почему нельзя создать жёсткую ссылку на директорию?<br>Для того, чтобы избежать циклических ссылок и рекурсии в файловой системе. Каждая директория должна иметь только одного родителя, `..` должен быть однозначным. Однако каждая директория всё равно имеет ссылки на себя. Это `.` и `..` у потомков<br><br>
		6. Для чего используется ключ `--`?<br>Многие команды используют это как обозначение конца опций, чтобы далее быть уверенным, что будут исключительно позиционные аргументы. Пример:<br>`grep -- -v file`
		   <br>
		7. `mount --mkdir -t iso9660 -o ro ~/Downloads/image.iso /mnt/cdrom`
		   <br>
		8. Узнать, почему нельзя размонтировать ФС<br>`fuser -m /dev/nvme0`
		   <br>
		9. Как создать iso?<br>`dd if=/dev/cdrom of=~/cdrom_image.iso`<br>`mkisofs -o /tmp/cd.iso /tmp/directory/`